syntax = "proto3";

package mpdb;

option go_package = "github.com/hshibli2002/MBplayer/pkg/grpcapi;grpcapi";


service SongsService {

  // CREATE REQUESTS
  rpc CreateSong(CreateSongRequest) returns (CreateSongResponse);

  // READ REQUESTS
  rpc GetSongById(GetSongByIdRequest) returns (GetSongByIdResponse);
  rpc GetSongsByArtistId(GetSongsByArtistIdRequest) returns (GetSongsByArtistIdResponse);

  // UPDATE REQUESTS
  rpc UpdateSongTitle(UpdateSongTitleRequest) returns (UpdateSongTitleResponse);
  rpc UpdateSongArtist(UpdateSongArtistRequest) returns (UpdateSongArtistResponse);

  // DELETE REQUESTS
  rpc DeleteSong(DeleteSongRequest) returns (DeleteSongResponse);
}

message Song {
  int64 id = 1;
  string title = 2;
  int64 artist_id = 3;
  int32 duration = 4;
  string created_at = 5;
}

message CreateSongRequest {
  string title = 1;
   int64 artist_id = 2;
  int32 duration = 3;
}

message CreateSongResponse {
  int64 id = 1;
  string title = 2;
   int64 artist_id = 3;
  int32 duration = 4;
  string created_at = 5;
}

message GetSongByIdRequest {
   int64 id = 1;
}

message GetSongByIdResponse {
  int64 id = 1;
  string title = 2;
  int64 artist_id = 3;
  int32 duration = 4;
  string created_at = 5;
}

message GetSongsByArtistIdRequest {
   int64 artist_id = 1;
}

message GetSongsByArtistIdResponse {
  repeated Song songs = 1;
}

message UpdateSongTitleRequest {
  int64 id = 1;
  string title = 2;
}

message UpdateSongTitleResponse {
  int64 id = 1;
  string title = 2;
  int64 artist_id = 3;
}

message UpdateSongArtistRequest {
   int64 id = 1;
   int64 artist_id = 2;
}

message UpdateSongArtistResponse {
  int64 id = 1;
  string title = 2;
  int64 artist_id = 3;
  int32 duration = 4;
  string created_at = 5;
}

message DeleteSongRequest {
  int64 id = 1;
}

message DeleteSongResponse {
  int64 id = 1;
}



